// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const getActiveRoutingLogic = `-- name: GetActiveRoutingLogic :one
SELECT id, allocation_logic FROM routing_decision
WHERE status = 'active' LIMIT 1
`

type GetActiveRoutingLogicRow struct {
	ID              uuid.UUID
	AllocationLogic []byte
}

func (q *Queries) GetActiveRoutingLogic(ctx context.Context) (GetActiveRoutingLogicRow, error) {
	row := q.db.QueryRow(ctx, getActiveRoutingLogic)
	var i GetActiveRoutingLogicRow
	err := row.Scan(&i.ID, &i.AllocationLogic)
	return i, err
}
